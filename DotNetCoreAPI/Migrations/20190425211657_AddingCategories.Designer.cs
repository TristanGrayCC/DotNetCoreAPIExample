// <auto-generated />
using DotNetCoreAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DotNetCoreAPI.Migrations
{
    [DbContext(typeof(DALContext))]
    [Migration("20190425211657_AddingCategories")]
    partial class AddingCategories
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DotNetCoreAPI.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new { Id = 1, Name = "Fruit" },
                        new { Id = 2, Name = "Grocery" },
                        new { Id = 3, Name = "Vegetable" },
                        new { Id = 4, Name = "Meat" }
                    );
                });

            modelBuilder.Entity("DotNetCoreAPI.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new { Id = 1, CategoryId = 1, Description = "12 easy peel clementines", Name = "Jaffa Clementines" },
                        new { Id = 2, CategoryId = 2, Description = "Salted Block Butter 250G", Name = "Block Butter" },
                        new { Id = 3, CategoryId = 3, Description = "Maris Piper Potatoes 2.5Kg", Name = "Maris Potatoes" },
                        new { Id = 4, CategoryId = 4, Description = "Beef Lean Steak Mince 500G 5% Fat", Name = "Lean Mice" },
                        new { Id = 5, CategoryId = 1, Description = "12 easy peel clementines", Name = "Jaffa Clementine" },
                        new { Id = 6, CategoryId = 1, Description = "Fresh Strawberries 400G", Name = "Strawberries" },
                        new { Id = 7, CategoryId = 1, Description = "Red Seedless Grapes 500G", Name = "Grapes" },
                        new { Id = 8, CategoryId = 4, Description = "Chicken Breast Portions 650G", Name = "Chicken Breast" },
                        new { Id = 9, CategoryId = 3, Description = "Brown Onions Minimum 3 Pack 385G", Name = "Onions" },
                        new { Id = 10, CategoryId = 1, Description = "Small Ripe Bananas 6 Pack", Name = "Bananas" }
                    );
                });

            modelBuilder.Entity("DotNetCoreAPI.Models.Product", b =>
                {
                    b.HasOne("DotNetCoreAPI.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
